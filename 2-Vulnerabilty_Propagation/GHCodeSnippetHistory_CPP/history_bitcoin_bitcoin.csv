,repo,origin_commit,file,code_context,commit_date,line_vuln,code_vuln
0,bitcoin/bitcoin,0d5613f9ded846aa20a95c757672e9560c664c4c,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2020-12-27 14:29:24 +0100,281,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
1,bitcoin/bitcoin,e0e55060bf697fe8b9ed43ff62383a0451e9c0ce,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2020-12-27 14:29:26 +0100,281,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
2,bitcoin/bitcoin,7e2beab2d28d8ab039d9554744a11592a7d7dc76,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-01-08 15:24:31 +0100,285,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
3,bitcoin/bitcoin,4f0961573318271d4d0737b99057f54c188540f7,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-01-10 21:33:10 +0100,285,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
4,bitcoin/bitcoin,506e6585a54818d0613a067f91c0bac2f308a48c,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-01-30 20:28:37 +0100,288,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
5,bitcoin/bitcoin,3913d1e8c1f604bdd622d5e81e5077ef52b30466,src/qt/guiutil.h," Queue a function to run in an object's event loop. This can be replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but for now use a QObject::connect for compatibility with older Qt versions, based on https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style/    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    ",2021-01-31 18:09:30 +0200,249,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
6,bitcoin/bitcoin,6fc72bd6f030c8b49e8b9f68188413766a239d73,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-02-06 22:21:16 +0100,288,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
7,bitcoin/bitcoin,623de12d040af89ff7c25de6eb0a19c67179dc5f,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-02-21 21:01:03 +0200,288,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
8,bitcoin/bitcoin,4d98b401fbd821700f7a792b0a4cb52c9b71bc9f,src/qt/guiutil.h," Queue a function to run in an object's event loop. This can be replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but for now use a QObject::connect for compatibility with older Qt versions, based on https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style/    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    ",2021-03-03 09:48:07 -0800,251,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
9,bitcoin/bitcoin,af7e365b1516d660d271475fdfe0c20ae09e66a8,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-04-01 03:05:00 +0300,251,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
10,bitcoin/bitcoin,f7e260a471010e2d656fbc5ea8c310f6d94c26b9,src/qt/guiutil.h,"    }
    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-04-01 03:05:31 +0300,256,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
11,bitcoin/bitcoin,d99ef327a885874fed1c4e35e0f47b10290c6bd9,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-05-01 15:07:10 +0300,276,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
12,bitcoin/bitcoin,6b2ce65392dc98250e84941370e975048b8afc54,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-05-01 15:07:10 +0300,279,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
13,bitcoin/bitcoin,a2e122f0fe72d695762db2b83905e246f451300c,src/qt/guiutil.h," Queue a function to run in an object's event loop. This can be replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but for now use a QObject::connect for compatibility with older Qt versions, based on https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);",2021-05-17 14:01:00 -0400,261,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
14,bitcoin/bitcoin,13f618818dc57673ac0287ad8b28ceb450efb374,src/qt/guiutil.h,"    }
    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-09-07 09:37:27 +0300,290,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
15,bitcoin/bitcoin,d09071da5bc997f2de1f55ca7a9babc3d7619329,src/qt/guiutil.h,"     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)            QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    ",2021-09-30 07:41:57 +0800,289,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
16,bitcoin/bitcoin,d54ec27bac388d7b84cf7b6cb4506bb0c25f2f88,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-10-07 17:01:21 +0100,295,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
17,bitcoin/bitcoin,f045f987171c3960c12813538b9f19a54a50b4f8,src/qt/guiutil.h,"    }
    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-12-03 01:03:30 +0200,295,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
18,bitcoin/bitcoin,fadc0c80ae4e526fb2b503f7cc02f6122aaf1de5,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);",2021-12-06 10:47:52 +0100,295,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
19,bitcoin/bitcoin,f47dda2c58b5d8d623e0e7ff4e74bc352dfa83d7,src/qt/guiutil.h,"    }
    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2021-12-30 19:36:57 +0200,295,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
20,bitcoin/bitcoin,3c4f5d2a2024a71523a2e43e8144cdb0818dee6f,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2022-01-11 18:32:11 +0200,295,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
21,bitcoin/bitcoin,f730bd7d580502ae3c3b5953ada3724b59f5cd9b,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2022-02-12 23:00:45 +0200,295,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
22,bitcoin/bitcoin,127de22c5fb396e1670d2a911faf7a9adc9241e2,src/qt/guiutil.h,"    /**     * Queue a function to run in an object's event loop. This can be     * replaced by a call to the QMetaObject::invokeMethod functor overload after Qt 5.10, but     * for now use a QObject::connect for compatibility with older Qt versions, based on     * https://stackoverflow.com/questions/21646467/how-to-execute-a-functor-or-a-lambda-in-a-given-thread-in-qt-gcd-style     */    template <typename Fn>    void ObjectInvoke(QObject* object, Fn&& function, Qt::ConnectionType connection = Qt::QueuedConnection)    {        QObject source;        QObject::connect(&source, &QObject::destroyed, object, std::forward<Fn>(function), connection);    }",2022-03-16 04:54:52 -0400,298,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
23,bitcoin/bitcoin,6958a26aa136e0976870237ccc6ea015d113f7ac,src/qt/guiutil.h,,2022-04-16 19:18:54 +0200,298,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
24,bitcoin/bitcoin,c378535e28e0c54353fde9c4a66cb3134a3ee742,src/qt/guiutil.h,,2022-06-21 19:16:39 -0300,306,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
25,bitcoin/bitcoin,306ccd4927a2efe325c8d84be1bdb79edeb29b04,src/qt/guiutil.h,,2022-12-24 23:49:50 +0000,306,        ItemDelegate(QObject* parent) : QItemDelegate(parent) {}        ^
