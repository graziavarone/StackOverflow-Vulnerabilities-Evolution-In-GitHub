,repo,origin_commit,file,code_context,commit_date,line_vuln,code_vuln
0,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,56,        calibrationData()        ^
1,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,95,        captureParameters()        ^
2,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,95,        captureParameters()        ^
3,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,95,        captureParameters()        ^
4,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,95,        captureParameters()        ^
5,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,95,        captureParameters()        ^
6,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,95,        captureParameters()        ^
7,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,95,        captureParameters()        ^
8,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,95,        captureParameters()        ^
9,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,95,        captureParameters()        ^
10,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,95,        captureParameters()        ^
11,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,43,calib::calibController::calibController()                        ^
12,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,43,calib::calibController::calibController()                        ^
13,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,43,calib::calibController::calibController()                        ^
14,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,43,calib::calibController::calibController()                        ^
15,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,58,"            imageSize = cv::Size(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)"
16,opencv/opencv,ec40b85e755c77526a072509918f7fd71b30a280,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2016-09-14 12:52:06 +0300,102,"            cameraResolution = cv::Size(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)"
17,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,56,        calibrationData()        ^
18,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,95,        captureParameters()        ^
19,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,95,        captureParameters()        ^
20,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,95,        captureParameters()        ^
21,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,95,        captureParameters()        ^
22,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,95,        captureParameters()        ^
23,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,95,        captureParameters()        ^
24,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,95,        captureParameters()        ^
25,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,95,        captureParameters()        ^
26,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,95,        captureParameters()        ^
27,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,95,        captureParameters()        ^
28,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,43,calib::calibController::calibController()                        ^
29,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,43,calib::calibController::calibController()                        ^
30,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,43,calib::calibController::calibController()                        ^
31,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,43,calib::calibController::calibController()                        ^
32,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,58,"            imageSize = cv::Size(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)"
33,opencv/opencv,49e0126b8e741fcacd2924e78cb5fd7d4b9c9828,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-08-13 11:51:08 +0200,102,"            cameraResolution = cv::Size(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)"
34,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,56,        calibrationData()        ^
35,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,95,        captureParameters()        ^
36,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,95,        captureParameters()        ^
37,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,95,        captureParameters()        ^
38,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,95,        captureParameters()        ^
39,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,95,        captureParameters()        ^
40,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,95,        captureParameters()        ^
41,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,95,        captureParameters()        ^
42,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,95,        captureParameters()        ^
43,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,95,        captureParameters()        ^
44,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,95,        captureParameters()        ^
45,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,43,calib::calibController::calibController()                        ^
46,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,43,calib::calibController::calibController()                        ^
47,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,43,calib::calibController::calibController()                        ^
48,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,43,calib::calibController::calibController()                        ^
49,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,58,"            imageSize = cv::Size(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)"
50,opencv/opencv,e0f524d3b79a70b7ac14d914bf06c80d2ad7cc10,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2018-09-24 11:31:40 +0300,102,"            cameraResolution = cv::Size(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)"
51,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,58,        calibrationData()        ^
52,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,98,        captureParameters()        ^
53,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,98,        captureParameters()        ^
54,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,98,        captureParameters()        ^
55,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,98,        captureParameters()        ^
56,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,98,        captureParameters()        ^
57,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,98,        captureParameters()        ^
58,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,98,        captureParameters()        ^
59,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,98,        captureParameters()        ^
60,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,98,        captureParameters()        ^
61,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,98,        captureParameters()        ^
62,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,44,calib::calibController::calibController()                        ^
63,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,44,calib::calibController::calibController()                        ^
64,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,44,calib::calibController::calibController()                        ^
65,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,44,calib::calibController::calibController()                        ^
66,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,60,"            imageSize = cv::Size(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)"
67,opencv/opencv,533bb035cfac6b32d8cb94009202df0c13b65e09,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-06-10 09:32:58 +0300,105,"            cameraResolution = cv::Size(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)"
68,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,58,        calibrationData()        ^
69,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
70,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
71,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
72,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
73,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
74,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
75,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
76,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
77,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
78,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
79,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
80,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,100,        captureParameters()        ^
81,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,44,calib::calibController::calibController()                        ^
82,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,44,calib::calibController::calibController()                        ^
83,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,44,calib::calibController::calibController()                        ^
84,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,44,calib::calibController::calibController()                        ^
85,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,60,"            imageSize = cv::Size(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)"
86,opencv/opencv,121034876ddfe9553babc868db644e2ebd74e318,apps/interactive-calibration/calibController.cpp,"calib::calibController::calibController(cv::Ptr<calib::calibrationData> data, int initialFlags, bool autoTuning, int minFramesNum) :
    mCalibData(data)
{
    mCalibFlags = initialFlags;
    mNeedTuning = autoTuning;
    mMinFramesNum = minFramesNum;
    mConfIntervalsState = false;
    mCoverageQualityState = false;
}
",2022-12-28 17:28:59 +0300,107,"            cameraResolution = cv::Size(IMAGE_MAX_WIDTH, IMAGE_MAX_HEIGHT)"
87,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,781,        _tileBuffer->dataSize = writePtr - _tileBuffer->buffer
88,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
89,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
90,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
91,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
92,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
93,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
94,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
95,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
96,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
97,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
98,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
99,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,175,    pixelData = new char[pixelDataSize]
100,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,175,    pixelData = new char[pixelDataSize]
101,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,196,    virtual void  copyValueFrom (const Attribute &other)
102,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,196,    virtual void  copyValueFrom (const Attribute &other)
103,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,61,    Name (const char text[])
104,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,76,"    TileDescription (unsigned int xs = 32,    ^"
105,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,77,"    Header (int width = 64,    ^"
106,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,371,    Iterator (const Header::AttributeMap::iterator &i)
107,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,392,    ConstIterator (const Header::AttributeMap::const_iterator &i)
108,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,393,    ConstIterator (const Header::Iterator &other)
109,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,138,"    Slice (PixelType type = HALF,    ^"
110,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,225,    Iterator (const FrameBuffer::SliceMap::iterator &i)
111,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,246,    ConstIterator (const FrameBuffer::SliceMap::const_iterator &i)
112,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,247,    ConstIterator (const FrameBuffer::Iterator &other)
113,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,68,"    TiledInputFile (const char fileName[],    ^"
114,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,80,"    TiledInputFile (IStream &is, int numThreads = globalThreadCount ())"
115,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,71,"    InputFile (const char fileName[], int numThreads = globalThreadCount())"
116,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,83,"    InputFile (IStream &is, int numThreads = globalThreadCount())"
117,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,61,"    PreviewRgba (unsigned char r = 0,    ^"
118,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,86,"     PreviewImage (unsigned int width = 0,     ^"
119,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,100,"    Channel (PixelType type = HALF,    ^"
120,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,275,    Iterator (const ChannelList::ChannelMap::iterator &i)
121,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,296,    ConstIterator (const ChannelList::ChannelMap::const_iterator &i)
122,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,297,    ConstIterator (const ChannelList::Iterator &other)
123,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,66,    StdIFStream (const char fileName[])
124,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,106,    StdOFStream (const char fileName[])
125,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,59,"    TileOffsets (LevelMode mode = ONE_LEVEL,    ^"
126,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,98,"    TOutSliceInfo (PixelType type = HALF,    ^"
127,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,135,"    TileCoord (int xTile = 0, int yTile = 0,    ^"
128,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,199,     TileBuffer (Compressor *comp)
129,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,85,     Array (long size)   {_data = new T[size]
130,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,142,    TypedAttribute (const T &value)
131,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,142,    TypedAttribute (const T &value)
132,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,80,"    virtual bool read (char c[/*n*/], int n)"
133,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,81,    virtual Int64 tellg ()
134,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,82,    virtual void seekg (Int64 pos)
135,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,83,    virtual void clear ()
136,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,120,"    virtual void write (const char c[/*n*/], int n)"
137,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,121,    virtual Int64 tellp ()
138,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,122,    virtual void seekp (Int64 pos)
139,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,142,"    virtual void write (const char c[/*n*/], int n)"
140,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,143,    virtual Int64 tellp ()
141,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,144,    virtual void seekp (Int64 pos)
142,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,159,    virtual const char *  typeName () const
143,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,181,    virtual Attribute *   copy () const
144,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,189,"    virtual void  writeValueTo (OStream &os,                  ^"
145,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,192,"    virtual void  readValueFrom (IStream &is,                  ^"
146,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,196,    virtual void  copyValueFrom (const Attribute &other)
147,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,298,"    S::writeChars (out, (const char *) c, n)"
148,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,306,"    S::writeChars (out, (const char *) c, n)"
149,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,314,"    S::readChars (in, (char *) c, n)"
150,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,322,"    S::readChars (in, (char *) c, n)"
151,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,571,"        new BufferedTile ((const char *)pixelData, pixelDataSize)"
152,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,578,"              Array<char>& tileBuffer,                           ^"
153,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,445,    b[4] = (signed char) (v >> 32)
154,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,446,    b[5] = (signed char) (v >> 40)
155,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,447,    b[6] = (signed char) (v >> 48)
156,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,448,    b[7] = (signed char) (v >> 56)
157,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,480,    b[4] = (unsigned char) (v >> 32)
158,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,481,    b[5] = (unsigned char) (v >> 40)
159,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,482,    b[6] = (unsigned char) (v >> 48)
160,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,483,    b[7] = (unsigned char) (v >> 56)
161,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,724,        (((long) b[4] << 32) & 0x000000ff00000000) |                      ^
162,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,725,        (((long) b[5] << 40) & 0x0000ff0000000000) |                      ^
163,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,726,        (((long) b[6] << 48) & 0x00ff000000000000) |                      ^
164,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,727,         ((long) b[7] << 56)
165,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,764,        (((unsigned long) b[4] << 32) & 0x000000ff00000000) |                               ^
166,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,765,        (((unsigned long) b[5] << 40) & 0x0000ff0000000000) |                               ^
167,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,766,        (((unsigned long) b[6] << 48) & 0x00ff000000000000) |                               ^
168,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    memcpy (pixelData, data, pixelDataSize);
~BufferedTile()delete [] pixelData;",2012-10-17 15:32:23 +0400,767,         ((unsigned long) b[7] << 56)
169,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,781,        _tileBuffer->dataSize = writePtr - _tileBuffer->buffer
170,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
171,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
172,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
173,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
174,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
175,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
176,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
177,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
178,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
179,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
180,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
181,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,175,    pixelData = new char[pixelDataSize]
182,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,175,    pixelData = new char[pixelDataSize]
183,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,196,    virtual void  copyValueFrom (const Attribute &other)
184,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,196,    virtual void  copyValueFrom (const Attribute &other)
185,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,61,    Name (const char text[])
186,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,76,"    TileDescription (unsigned int xs = 32,    ^"
187,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,77,"    Header (int width = 64,    ^"
188,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,371,    Iterator (const Header::AttributeMap::iterator &i)
189,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,392,    ConstIterator (const Header::AttributeMap::const_iterator &i)
190,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,393,    ConstIterator (const Header::Iterator &other)
191,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,138,"    Slice (PixelType type = HALF,    ^"
192,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,225,    Iterator (const FrameBuffer::SliceMap::iterator &i)
193,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,246,    ConstIterator (const FrameBuffer::SliceMap::const_iterator &i)
194,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,247,    ConstIterator (const FrameBuffer::Iterator &other)
195,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,68,"    TiledInputFile (const char fileName[],    ^"
196,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,80,"    TiledInputFile (IStream &is, int numThreads = globalThreadCount ())"
197,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,71,"    InputFile (const char fileName[], int numThreads = globalThreadCount())"
198,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,83,"    InputFile (IStream &is, int numThreads = globalThreadCount())"
199,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,61,"    PreviewRgba (unsigned char r = 0,    ^"
200,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,86,"     PreviewImage (unsigned int width = 0,     ^"
201,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,100,"    Channel (PixelType type = HALF,    ^"
202,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,275,    Iterator (const ChannelList::ChannelMap::iterator &i)
203,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,296,    ConstIterator (const ChannelList::ChannelMap::const_iterator &i)
204,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,297,    ConstIterator (const ChannelList::Iterator &other)
205,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,66,    StdIFStream (const char fileName[])
206,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,106,    StdOFStream (const char fileName[])
207,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,59,"    TileOffsets (LevelMode mode = ONE_LEVEL,    ^"
208,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,98,"    TOutSliceInfo (PixelType type = HALF,    ^"
209,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,135,"    TileCoord (int xTile = 0, int yTile = 0,    ^"
210,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,199,     TileBuffer (Compressor *comp)
211,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,85,     Array (long size)   {_data = new T[size]
212,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,142,    TypedAttribute (const T &value)
213,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,142,    TypedAttribute (const T &value)
214,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,80,"    virtual bool read (char c[/*n*/], int n)"
215,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,81,    virtual Int64 tellg ()
216,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,82,    virtual void seekg (Int64 pos)
217,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,83,    virtual void clear ()
218,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,120,"    virtual void write (const char c[/*n*/], int n)"
219,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,121,    virtual Int64 tellp ()
220,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,122,    virtual void seekp (Int64 pos)
221,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,142,"    virtual void write (const char c[/*n*/], int n)"
222,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,143,    virtual Int64 tellp ()
223,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,144,    virtual void seekp (Int64 pos)
224,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,159,    virtual const char *  typeName () const
225,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,181,    virtual Attribute *   copy () const
226,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,189,"    virtual void  writeValueTo (OStream &os,                  ^"
227,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,192,"    virtual void  readValueFrom (IStream &is,                  ^"
228,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,196,    virtual void  copyValueFrom (const Attribute &other)
229,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,298,"    S::writeChars (out, (const char *) c, n)"
230,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,306,"    S::writeChars (out, (const char *) c, n)"
231,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,314,"    S::readChars (in, (char *) c, n)"
232,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,322,"    S::readChars (in, (char *) c, n)"
233,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,571,"        new BufferedTile ((const char *)pixelData, pixelDataSize)"
234,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,578,"              Array<char>& tileBuffer,                           ^"
235,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,445,    b[4] = (signed char) (v >> 32)
236,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,446,    b[5] = (signed char) (v >> 40)
237,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,447,    b[6] = (signed char) (v >> 48)
238,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,448,    b[7] = (signed char) (v >> 56)
239,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,480,    b[4] = (unsigned char) (v >> 32)
240,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,481,    b[5] = (unsigned char) (v >> 40)
241,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,482,    b[6] = (unsigned char) (v >> 48)
242,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,483,    b[7] = (unsigned char) (v >> 56)
243,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,724,        (((long) b[4] << 32) & 0x000000ff00000000) |                      ^
244,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,725,        (((long) b[5] << 40) & 0x0000ff0000000000) |                      ^
245,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,726,        (((long) b[6] << 48) & 0x00ff000000000000) |                      ^
246,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,727,         ((long) b[7] << 56)
247,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,764,        (((unsigned long) b[4] << 32) & 0x000000ff00000000) |                               ^
248,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,765,        (((unsigned long) b[5] << 40) & 0x0000ff0000000000) |                               ^
249,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,766,        (((unsigned long) b[6] << 48) & 0x00ff000000000000) |                               ^
250,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"    ~BufferedTile()
    {
    delete [] pixelData;
    }
",2012-10-17 15:57:49 +0400,767,         ((unsigned long) b[7] << 56)
251,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"InputFile::Data::Data (bool del, int numThreads):                 ^"
252,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"InputFile::Data::Data (bool del, int numThreads):                 ^"
253,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"InputFile::Data::Data (bool del, int numThreads):                 ^"
254,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"InputFile::Data::Data (bool del, int numThreads):                 ^"
255,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"InputFile::Data::Data (bool del, int numThreads):                 ^"
256,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,199,    TiledInputFile * tFile ()
257,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,61,    Name (const char text[])
258,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,76,"    TileDescription (unsigned int xs = 32,    ^"
259,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,77,"    Header (int width = 64,    ^"
260,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,371,    Iterator (const Header::AttributeMap::iterator &i)
261,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,392,    ConstIterator (const Header::AttributeMap::const_iterator &i)
262,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,393,    ConstIterator (const Header::Iterator &other)
263,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,138,"    Slice (PixelType type = HALF,    ^"
264,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,225,    Iterator (const FrameBuffer::SliceMap::iterator &i)
265,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,246,    ConstIterator (const FrameBuffer::SliceMap::const_iterator &i)
266,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,247,    ConstIterator (const FrameBuffer::Iterator &other)
267,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,71,"    InputFile (const char fileName[], int numThreads = globalThreadCount())"
268,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,83,"    InputFile (IStream &is, int numThreads = globalThreadCount())"
269,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,68,"    TiledInputFile (const char fileName[],    ^"
270,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,80,"    TiledInputFile (IStream &is, int numThreads = globalThreadCount ())"
271,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"    Channel (PixelType type = HALF,    ^"
272,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,275,    Iterator (const ChannelList::ChannelMap::iterator &i)
273,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,296,    ConstIterator (const ChannelList::ChannelMap::const_iterator &i)
274,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,297,    ConstIterator (const ChannelList::Iterator &other)
275,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,66,    StdIFStream (const char fileName[])
276,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,106,    StdOFStream (const char fileName[])
277,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,80,"    virtual bool read (char c[/*n*/], int n)"
278,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,81,    virtual Int64 tellg ()
279,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,82,    virtual void seekg (Int64 pos)
280,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,83,    virtual void clear ()
281,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,120,"    virtual void write (const char c[/*n*/], int n)"
282,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,121,    virtual Int64 tellp ()
283,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,122,    virtual void seekp (Int64 pos)
284,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,142,"    virtual void write (const char c[/*n*/], int n)"
285,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,143,    virtual Int64 tellp ()
286,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,144,    virtual void seekp (Int64 pos)
287,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,145,        delete [] (((unsigned int *)s.base) + offset)
288,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,150,        delete [] ((half *)s.base + offset)
289,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,155,        delete [] (((float *)s.base) + offset)
290,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,481,                (char *)(new unsigned int[tileRowSize] -                ^
291,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,496,                (char *)(new half[tileRowSize] -                ^
292,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,511,                (char *)(new float[tileRowSize] -                ^
293,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,155,        delete [] (((float *)s.base) + offset)
294,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,259,"            char *fromPtr, *toPtr"
295,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,263,        int yStart = minYThisRow
296,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"InputFile::Data::Data (bool del, int numThreads):                 ^"
297,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"InputFile::Data::Data (bool del, int numThreads):                 ^"
298,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"InputFile::Data::Data (bool del, int numThreads):                 ^"
299,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"InputFile::Data::Data (bool del, int numThreads):                 ^"
300,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"InputFile::Data::Data (bool del, int numThreads):                 ^"
301,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,199,    TiledInputFile * tFile ()
302,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,61,    Name (const char text[])
303,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,76,"    TileDescription (unsigned int xs = 32,    ^"
304,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,77,"    Header (int width = 64,    ^"
305,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,371,    Iterator (const Header::AttributeMap::iterator &i)
306,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,392,    ConstIterator (const Header::AttributeMap::const_iterator &i)
307,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,393,    ConstIterator (const Header::Iterator &other)
308,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,138,"    Slice (PixelType type = HALF,    ^"
309,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,225,    Iterator (const FrameBuffer::SliceMap::iterator &i)
310,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,246,    ConstIterator (const FrameBuffer::SliceMap::const_iterator &i)
311,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,247,    ConstIterator (const FrameBuffer::Iterator &other)
312,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,71,"    InputFile (const char fileName[], int numThreads = globalThreadCount())"
313,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,83,"    InputFile (IStream &is, int numThreads = globalThreadCount())"
314,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,68,"    TiledInputFile (const char fileName[],    ^"
315,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,80,"    TiledInputFile (IStream &is, int numThreads = globalThreadCount ())"
316,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,100,"    Channel (PixelType type = HALF,    ^"
317,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,275,    Iterator (const ChannelList::ChannelMap::iterator &i)
318,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,296,    ConstIterator (const ChannelList::ChannelMap::const_iterator &i)
319,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,297,    ConstIterator (const ChannelList::Iterator &other)
320,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,66,    StdIFStream (const char fileName[])
321,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,106,    StdOFStream (const char fileName[])
322,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,80,"    virtual bool read (char c[/*n*/], int n)"
323,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,81,    virtual Int64 tellg ()
324,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,82,    virtual void seekg (Int64 pos)
325,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,83,    virtual void clear ()
326,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,120,"    virtual void write (const char c[/*n*/], int n)"
327,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,121,    virtual Int64 tellp ()
328,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,122,    virtual void seekp (Int64 pos)
329,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,142,"    virtual void write (const char c[/*n*/], int n)"
330,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,143,    virtual Int64 tellp ()
331,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,144,    virtual void seekp (Int64 pos)
332,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,145,        delete [] (((unsigned int *)s.base) + offset)
333,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,150,        delete [] ((half *)s.base + offset)
334,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,155,        delete [] (((float *)s.base) + offset)
335,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,481,                (char *)(new unsigned int[tileRowSize] -                ^
336,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,496,                (char *)(new half[tileRowSize] -                ^
337,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,511,                (char *)(new float[tileRowSize] -                ^
338,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,155,        delete [] (((float *)s.base) + offset)
339,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,259,"            char *fromPtr, *toPtr"
340,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfInputFile.cpp,"InputFile::~InputFile ()
{
    delete _data;
}
",2012-10-17 15:57:49 +0400,263,        int yStart = minYThisRow
341,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,781,        _tileBuffer->dataSize = writePtr - _tileBuffer->buffer
342,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
343,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
344,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
345,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
346,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
347,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
348,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
349,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
350,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
351,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
352,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,283,"TiledOutputFile::Data::Data (bool del, int numThreads):                       ^"
353,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,175,    pixelData = new char[pixelDataSize]
354,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,175,    pixelData = new char[pixelDataSize]
355,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,196,    virtual void  copyValueFrom (const Attribute &other)
356,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,196,    virtual void  copyValueFrom (const Attribute &other)
357,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,61,    Name (const char text[])
358,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,76,"    TileDescription (unsigned int xs = 32,    ^"
359,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,77,"    Header (int width = 64,    ^"
360,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,371,    Iterator (const Header::AttributeMap::iterator &i)
361,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,392,    ConstIterator (const Header::AttributeMap::const_iterator &i)
362,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,393,    ConstIterator (const Header::Iterator &other)
363,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,138,"    Slice (PixelType type = HALF,    ^"
364,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,225,    Iterator (const FrameBuffer::SliceMap::iterator &i)
365,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,246,    ConstIterator (const FrameBuffer::SliceMap::const_iterator &i)
366,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,247,    ConstIterator (const FrameBuffer::Iterator &other)
367,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,68,"    TiledInputFile (const char fileName[],    ^"
368,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,80,"    TiledInputFile (IStream &is, int numThreads = globalThreadCount ())"
369,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,71,"    InputFile (const char fileName[], int numThreads = globalThreadCount())"
370,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,83,"    InputFile (IStream &is, int numThreads = globalThreadCount())"
371,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,61,"    PreviewRgba (unsigned char r = 0,    ^"
372,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,86,"     PreviewImage (unsigned int width = 0,     ^"
373,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,100,"    Channel (PixelType type = HALF,    ^"
374,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,275,    Iterator (const ChannelList::ChannelMap::iterator &i)
375,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,296,    ConstIterator (const ChannelList::ChannelMap::const_iterator &i)
376,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,297,    ConstIterator (const ChannelList::Iterator &other)
377,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,66,    StdIFStream (const char fileName[])
378,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,106,    StdOFStream (const char fileName[])
379,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,59,"    TileOffsets (LevelMode mode = ONE_LEVEL,    ^"
380,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,98,"    TOutSliceInfo (PixelType type = HALF,    ^"
381,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,135,"    TileCoord (int xTile = 0, int yTile = 0,    ^"
382,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,199,     TileBuffer (Compressor *comp)
383,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,85,     Array (long size)   {_data = new T[size]
384,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,142,    TypedAttribute (const T &value)
385,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,142,    TypedAttribute (const T &value)
386,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,80,"    virtual bool read (char c[/*n*/], int n)"
387,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,81,    virtual Int64 tellg ()
388,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,82,    virtual void seekg (Int64 pos)
389,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,83,    virtual void clear ()
390,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,120,"    virtual void write (const char c[/*n*/], int n)"
391,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,121,    virtual Int64 tellp ()
392,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,122,    virtual void seekp (Int64 pos)
393,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,142,"    virtual void write (const char c[/*n*/], int n)"
394,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,143,    virtual Int64 tellp ()
395,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,144,    virtual void seekp (Int64 pos)
396,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,159,    virtual const char *  typeName () const
397,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,181,    virtual Attribute *   copy () const
398,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,189,"    virtual void  writeValueTo (OStream &os,                  ^"
399,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,192,"    virtual void  readValueFrom (IStream &is,                  ^"
400,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,196,    virtual void  copyValueFrom (const Attribute &other)
401,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,298,"    S::writeChars (out, (const char *) c, n)"
402,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,306,"    S::writeChars (out, (const char *) c, n)"
403,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,314,"    S::readChars (in, (char *) c, n)"
404,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,322,"    S::readChars (in, (char *) c, n)"
405,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,571,"        new BufferedTile ((const char *)pixelData, pixelDataSize)"
406,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,578,"              Array<char>& tileBuffer,                           ^"
407,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,445,    b[4] = (signed char) (v >> 32)
408,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,446,    b[5] = (signed char) (v >> 40)
409,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,447,    b[6] = (signed char) (v >> 48)
410,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,448,    b[7] = (signed char) (v >> 56)
411,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,480,    b[4] = (unsigned char) (v >> 32)
412,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,481,    b[5] = (unsigned char) (v >> 40)
413,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,482,    b[6] = (unsigned char) (v >> 48)
414,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,483,    b[7] = (unsigned char) (v >> 56)
415,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,724,        (((long) b[4] << 32) & 0x000000ff00000000) |                      ^
416,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,725,        (((long) b[5] << 40) & 0x0000ff0000000000) |                      ^
417,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,726,        (((long) b[6] << 48) & 0x00ff000000000000) |                      ^
418,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,727,         ((long) b[7] << 56)
419,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,764,        (((unsigned long) b[4] << 32) & 0x000000ff00000000) |                               ^
420,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,765,        (((unsigned long) b[5] << 40) & 0x0000ff0000000000) |                               ^
421,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,766,        (((unsigned long) b[6] << 48) & 0x00ff000000000000) |                               ^
422,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,3rdparty/openexr/IlmImf/ImfTiledOutputFile.cpp,"TileBuffer::~TileBuffer ()
{
    delete compressor;
}
",2012-10-17 15:57:49 +0400,767,         ((unsigned long) b[7] << 56)
423,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-03-15 14:36:01 +0000,172,    KeypointResponseGreaterThanThreshold(float _value) :    ^
424,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-03-15 14:36:01 +0000,217,    RoiPredicate( const Rect& _r ) : r(_r)    ^
425,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-03-15 14:36:01 +0000,269,    MaskPredicate( const Mat& _mask ) : mask(_mask) {}    ^
426,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-03-15 14:36:01 +0000,289,    KeyPoint_LessThan(const vector<KeyPoint>& _kp) : kp(&_kp) {}    ^
427,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-03-15 14:36:01 +0000,52,    u.f = pt.y
428,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-03-15 14:36:01 +0000,53,    u.f = size
429,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-03-15 14:36:01 +0000,54,    u.f = angle
430,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-03-15 14:36:01 +0000,55,    u.f = response
431,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-03-15 14:36:01 +0000,325,        KeyPoint& kp1 = keypoints[kpidx[i]]
432,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-03-15 14:36:01 +0000,326,        KeyPoint& kp2 = keypoints[kpidx[j]]
433,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-12 14:46:12 +0000,172,    KeypointResponseGreaterThanThreshold(float _value) :    ^
434,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-12 14:46:12 +0000,217,    RoiPredicate( const Rect& _r ) : r(_r)    ^
435,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-12 14:46:12 +0000,269,    MaskPredicate( const Mat& _mask ) : mask(_mask) {}    ^
436,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-12 14:46:12 +0000,290,    KeyPoint_LessThan(const vector<KeyPoint>& _kp) : kp(&_kp) {}    ^
437,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-12 14:46:12 +0000,52,    u.f = pt.y
438,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-12 14:46:12 +0000,53,    u.f = size
439,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-12 14:46:12 +0000,54,    u.f = angle
440,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-12 14:46:12 +0000,55,    u.f = response
441,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-12 14:46:12 +0000,326,        KeyPoint& kp1 = keypoints[kpidx[i]]
442,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-12 14:46:12 +0000,327,        KeyPoint& kp2 = keypoints[kpidx[j]]
443,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-15 13:04:17 +0000,172,    KeypointResponseGreaterThanThreshold(float _value) :    ^
444,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-15 13:04:17 +0000,217,    RoiPredicate( const Rect& _r ) : r(_r)    ^
445,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-15 13:04:17 +0000,269,    MaskPredicate( const Mat& _mask ) : mask(_mask) {}    ^
446,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-15 13:04:17 +0000,290,    KeyPoint_LessThan(const vector<KeyPoint>& _kp) : kp(&_kp) {}    ^
447,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-15 13:04:17 +0000,52,    u.f = pt.y
448,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-15 13:04:17 +0000,53,    u.f = size
449,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-15 13:04:17 +0000,54,    u.f = angle
450,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-15 13:04:17 +0000,55,    u.f = response
451,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-15 13:04:17 +0000,326,        KeyPoint& kp1 = keypoints[kpidx[i]]
452,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-06-15 13:04:17 +0000,327,        KeyPoint& kp2 = keypoints[kpidx[j]]
453,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,MaskPredicate( const Mat& _mask ) : mask(_mask) ,2012-10-17 15:32:23 +0400,172,    KeypointResponseGreaterThanThreshold(float _value) :    ^
454,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,MaskPredicate( const Mat& _mask ) : mask(_mask) ,2012-10-17 15:32:23 +0400,217,    RoiPredicate( const Rect& _r ) : r(_r)    ^
455,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,MaskPredicate( const Mat& _mask ) : mask(_mask) ,2012-10-17 15:32:23 +0400,269,    MaskPredicate( const Mat& _mask ) : mask(_mask) {}    ^
456,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,MaskPredicate( const Mat& _mask ) : mask(_mask) ,2012-10-17 15:32:23 +0400,290,    KeyPoint_LessThan(const vector<KeyPoint>& _kp) : kp(&_kp) {}    ^
457,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,MaskPredicate( const Mat& _mask ) : mask(_mask) ,2012-10-17 15:32:23 +0400,52,    u.f = pt.y
458,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,MaskPredicate( const Mat& _mask ) : mask(_mask) ,2012-10-17 15:32:23 +0400,53,    u.f = size
459,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,MaskPredicate( const Mat& _mask ) : mask(_mask) ,2012-10-17 15:32:23 +0400,54,    u.f = angle
460,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,MaskPredicate( const Mat& _mask ) : mask(_mask) ,2012-10-17 15:32:23 +0400,55,    u.f = response
461,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,MaskPredicate( const Mat& _mask ) : mask(_mask) ,2012-10-17 15:32:23 +0400,326,        KeyPoint& kp1 = keypoints[kpidx[i]]
462,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,MaskPredicate( const Mat& _mask ) : mask(_mask) ,2012-10-17 15:32:23 +0400,327,        KeyPoint& kp2 = keypoints[kpidx[j]]
463,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-10-17 15:57:49 +0400,172,    KeypointResponseGreaterThanThreshold(float _value) :    ^
464,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-10-17 15:57:49 +0400,217,    RoiPredicate( const Rect& _r ) : r(_r)    ^
465,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-10-17 15:57:49 +0400,269,    MaskPredicate( const Mat& _mask ) : mask(_mask) {}    ^
466,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-10-17 15:57:49 +0400,290,    KeyPoint_LessThan(const vector<KeyPoint>& _kp) : kp(&_kp) {}    ^
467,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-10-17 15:57:49 +0400,52,    u.f = pt.y
468,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-10-17 15:57:49 +0400,53,    u.f = size
469,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-10-17 15:57:49 +0400,54,    u.f = angle
470,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-10-17 15:57:49 +0400,55,    u.f = response
471,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-10-17 15:57:49 +0400,326,        KeyPoint& kp1 = keypoints[kpidx[i]]
472,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    MaskPredicate( const Mat& _mask ) : mask(_mask) {}
",2012-10-17 15:57:49 +0400,327,        KeyPoint& kp2 = keypoints[kpidx[j]]
473,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-03-15 14:36:01 +0000,172,    KeypointResponseGreaterThanThreshold(float _value) :    ^
474,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-03-15 14:36:01 +0000,217,    RoiPredicate( const Rect& _r ) : r(_r)    ^
475,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-03-15 14:36:01 +0000,269,    MaskPredicate( const Mat& _mask ) : mask(_mask) {}    ^
476,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-03-15 14:36:01 +0000,289,    KeyPoint_LessThan(const vector<KeyPoint>& _kp) : kp(&_kp) {}    ^
477,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-03-15 14:36:01 +0000,52,    u.f = pt.y
478,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-03-15 14:36:01 +0000,53,    u.f = size
479,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-03-15 14:36:01 +0000,54,    u.f = angle
480,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-03-15 14:36:01 +0000,55,    u.f = response
481,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-03-15 14:36:01 +0000,325,        KeyPoint& kp1 = keypoints[kpidx[i]]
482,opencv/opencv,957e80abbd3ad2fc3cf650b04d3bc20ebfdaa82e,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-03-15 14:36:01 +0000,326,        KeyPoint& kp2 = keypoints[kpidx[j]]
483,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-12 14:46:12 +0000,172,    KeypointResponseGreaterThanThreshold(float _value) :    ^
484,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-12 14:46:12 +0000,217,    RoiPredicate( const Rect& _r ) : r(_r)    ^
485,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-12 14:46:12 +0000,269,    MaskPredicate( const Mat& _mask ) : mask(_mask) {}    ^
486,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-12 14:46:12 +0000,290,    KeyPoint_LessThan(const vector<KeyPoint>& _kp) : kp(&_kp) {}    ^
487,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-12 14:46:12 +0000,52,    u.f = pt.y
488,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-12 14:46:12 +0000,53,    u.f = size
489,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-12 14:46:12 +0000,54,    u.f = angle
490,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-12 14:46:12 +0000,55,    u.f = response
491,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-12 14:46:12 +0000,326,        KeyPoint& kp1 = keypoints[kpidx[i]]
492,opencv/opencv,c5aba337e995eef92704201be2e37773a63b3709,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-12 14:46:12 +0000,327,        KeyPoint& kp2 = keypoints[kpidx[j]]
493,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-15 13:04:17 +0000,172,    KeypointResponseGreaterThanThreshold(float _value) :    ^
494,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-15 13:04:17 +0000,217,    RoiPredicate( const Rect& _r ) : r(_r)    ^
495,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-15 13:04:17 +0000,269,    MaskPredicate( const Mat& _mask ) : mask(_mask) {}    ^
496,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-15 13:04:17 +0000,290,    KeyPoint_LessThan(const vector<KeyPoint>& _kp) : kp(&_kp) {}    ^
497,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-15 13:04:17 +0000,52,    u.f = pt.y
498,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-15 13:04:17 +0000,53,    u.f = size
499,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-15 13:04:17 +0000,54,    u.f = angle
500,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-15 13:04:17 +0000,55,    u.f = response
501,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-15 13:04:17 +0000,326,        KeyPoint& kp1 = keypoints[kpidx[i]]
502,opencv/opencv,bd0e0b5800f940f09aef83fa268d8707f1f01cee,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-06-15 13:04:17 +0000,327,        KeyPoint& kp2 = keypoints[kpidx[j]]
503,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,RoiPredicate( const Rect& _r ) : r(_r),2012-10-17 15:32:23 +0400,172,    KeypointResponseGreaterThanThreshold(float _value) :    ^
504,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,RoiPredicate( const Rect& _r ) : r(_r),2012-10-17 15:32:23 +0400,217,    RoiPredicate( const Rect& _r ) : r(_r)    ^
505,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,RoiPredicate( const Rect& _r ) : r(_r),2012-10-17 15:32:23 +0400,269,    MaskPredicate( const Mat& _mask ) : mask(_mask) {}    ^
506,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,RoiPredicate( const Rect& _r ) : r(_r),2012-10-17 15:32:23 +0400,290,    KeyPoint_LessThan(const vector<KeyPoint>& _kp) : kp(&_kp) {}    ^
507,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,RoiPredicate( const Rect& _r ) : r(_r),2012-10-17 15:32:23 +0400,52,    u.f = pt.y
508,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,RoiPredicate( const Rect& _r ) : r(_r),2012-10-17 15:32:23 +0400,53,    u.f = size
509,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,RoiPredicate( const Rect& _r ) : r(_r),2012-10-17 15:32:23 +0400,54,    u.f = angle
510,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,RoiPredicate( const Rect& _r ) : r(_r),2012-10-17 15:32:23 +0400,55,    u.f = response
511,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,RoiPredicate( const Rect& _r ) : r(_r),2012-10-17 15:32:23 +0400,326,        KeyPoint& kp1 = keypoints[kpidx[i]]
512,opencv/opencv,04384a71e409edc65c41669fa8f7ef9d568050a2,modules/features2d/src/keypoint.cpp,RoiPredicate( const Rect& _r ) : r(_r),2012-10-17 15:32:23 +0400,327,        KeyPoint& kp2 = keypoints[kpidx[j]]
513,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-10-17 15:57:49 +0400,172,    KeypointResponseGreaterThanThreshold(float _value) :    ^
514,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-10-17 15:57:49 +0400,217,    RoiPredicate( const Rect& _r ) : r(_r)    ^
515,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-10-17 15:57:49 +0400,269,    MaskPredicate( const Mat& _mask ) : mask(_mask) {}    ^
516,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-10-17 15:57:49 +0400,290,    KeyPoint_LessThan(const vector<KeyPoint>& _kp) : kp(&_kp) {}    ^
517,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-10-17 15:57:49 +0400,52,    u.f = pt.y
518,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-10-17 15:57:49 +0400,53,    u.f = size
519,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-10-17 15:57:49 +0400,54,    u.f = angle
520,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-10-17 15:57:49 +0400,55,    u.f = response
521,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-10-17 15:57:49 +0400,326,        KeyPoint& kp1 = keypoints[kpidx[i]]
522,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/keypoint.cpp,"    RoiPredicate( const Rect& _r ) : r(_r)
    {}
",2012-10-17 15:57:49 +0400,327,        KeyPoint& kp2 = keypoints[kpidx[j]]
523,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,244,"    IntersectAreaCounter() : bua(0), bna(0) {}    ^"
524,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,244,"    IntersectAreaCounter() : bua(0), bna(0) {}    ^"
525,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,244,"    IntersectAreaCounter() : bua(0), bna(0) {}    ^"
526,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,244,"    IntersectAreaCounter() : bua(0), bna(0) {}    ^"
527,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,142,    center = _center
528,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,143,    ellipse = _ellipse
529,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,309,        UsedFinder(const SIdx& _used) : used(_used) {}        ^
530,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,477,    DMatchForEvaluation( const DMatch &dm ) : DMatch( dm ) {}    ^
531,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,530,    float recall = -1.f
532,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,487,    return correctMatchCount + falseMatchCount ? (float)correctMatchCount / (float)(correctMatchCount + falseMatchCount) : -1
533,opencv/opencv,81f826db2b3945854a87cf7ceb1b2244103dbed9,modules/features2d/src/evaluation.cpp,"        UsedFinder(const SIdx& _used) : used(_used) {}
",2012-10-17 15:57:49 +0400,280,    void join( IntersectAreaCounter& ac )                                     ^
